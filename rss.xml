<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>mufengs 的个人博客</title>
    <link>https://blog.mufengs.com</link>
    <atom:link href="https://blog.mufengs.com/rss.xml" rel="self" type="application/rss+xml"/>
    <description>没有引发任何行动的思想都不是思想，而是梦想。 —— 马丁</description>
    <generator>Solo, v3.9.0, https://solo.b3log.org</generator>
    <lastBuildDate>Sat, 22 Feb 2020 05:02:44 -0500</lastBuildDate>
    <language>zh-cn</language>
    <item>
      <title>https 证书不自动更新</title>
      <link>https://blog.mufengs.com/articles/2020/02/18/1582030402261.html</link>
      <description><![CDATA[<p>之前用的容器自动更新 https 证书，这两天陆陆续续收到证书到期的邮件 进入服务器，查看日志，出现如下 "Could not get nonce, let's try again  查看相关文章，得出是 acme.sh 的 版本太久的原因导致的 docker exec acme /bin/bash cd .acme.sh ./acme.sh --upgrade --auto-upgrade  刷新页面发现证书更新成功</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/02/18/1582030402261.html</guid>
      <category>HTTPS</category>
      <pubDate>Tue, 18 Feb 2020 07:53:25 -0500</pubDate>
    </item>
    <item>
      <title>Pac 自动代理文件调试</title>
      <link>https://blog.mufengs.com/articles/2020/02/13/1581592716796.html</link>
      <description><![CDATA[<p>在您的 .pac 档案中使用 alert 功能。  在 Firefox 浏览器中： 工具 - &gt; Web 开发人员 - &gt; 浏览器控制台(Ctrl + Shift + J)[这不是 Web 控制台!!] - &gt; 过滤器输出：PAC-alert 在 Chrome 浏览器中： <a href="chrome://net-internals/#events" target="_blank">chrome://net-internals/#events</a> - &gt; 搜索包含说明的记录：PAC_JAVASCRIPT_ALERT (关于 Chrome 感谢您的回答：<a href="https://serverfault.com/a/738871" target="_blank">https://serverfault.com/a/738871</a>)  示例 .pac 文件： function FindProxyForURL(url, host) { alert("url = " + url + " *** host = " + host + " *** Resolved IP = " + dnsResolve(host)); return "DIRECT"; }</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/02/13/1581592716796.html</guid>
      <category>代理</category>
      <pubDate>Thu, 13 Feb 2020 06:18:38 -0500</pubDate>
    </item>
    <item>
      <title>Nginx 反向代理过程中出现 https 访问 http 问题</title>
      <link>https://blog.mufengs.com/articles/2020/02/12/1581524209582.html</link>
      <description><![CDATA[<p>一般对于浏览器来说 https 的网站 中访问 http 是 如下有问题的 Mixed Content: The page at '<a href="https://www.xxx.com/" target="_blank">https://www.xxx.com/</a>' was loaded over HTTPS, but requested an insecure script '<a href="http://www.xxx.com/a.js" target="_blank">http://www.xxx.com/a.js</a>'. This request has been blocked; the content must be served over HTTPS.  修改 nginx 的 proxy 配置部分，如下所示 add_header Content-Security-Policy upgrade-insecure-requests; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  重启 nginx，这个时候我们会发现，问题解决了</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/02/12/1581524209582.html</guid>
      <category>NGINX</category>
      <pubDate>Wed, 12 Feb 2020 11:16:52 -0500</pubDate>
    </item>
    <item>
      <title>开工大吉</title>
      <link>https://blog.mufengs.com/articles/2020/02/10/1581342537118.html</link>
      <description/>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/02/10/1581342537118.html</guid>
      <category>生活</category>
      <pubDate>Mon, 10 Feb 2020 08:48:57 -0500</pubDate>
    </item>
    <item>
      <title>终端翻译神器 python-translate</title>
      <link>https://blog.mufengs.com/articles/2020/01/09/1578559002546.html</link>
      <description><![CDATA[<p>此项目改自caspartse/python-translate 因为python2今年停止维护，果断上python3。然后原先项目只能翻译单词，想翻译句子就比较蛋疼了，简单的改了下 <a href="https://github.com/mufengcoding/python-translate" target="_blank">https://github.com/mufengcoding/python-translate</a> 使用效果  欢迎大家来star，求个小✨🌟</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/01/09/1578559002546.html</guid>
      <category>Python</category>
      <pubDate>Thu, 09 Jan 2020 03:38:53 -0500</pubDate>
    </item>
    <item>
      <title>Https 就是这么简单之 Caddy2</title>
      <link>https://blog.mufengs.com/articles/2020/01/08/1578496435040.html</link>
      <description><![CDATA[<p>之前博客一直跑的是Caddy1.0版本，很轻松。就博客和小应用来说Caddy做web服务就够了，可以省去很多事情，逼格高而且不失优雅。 之前写的一些关于caddy1.0的使用姿势  基于 caddy 提升 https 安全等级 caddy 实现 google 镜像站点  01. 起因 看同事在用阿里云的赛门铁克ssl证书，实在是看不下去了，就给同事安利了caddy。当时没多想，随手丢了一个百度到使用文档，然后同事自由发挥了下，编译安装了caddy2，跑不起来，很纠结。当时因为caddy只有1.0版本，2版本一直处于beta阶段，就没有用，结果翻车了。。。 于是被动的去学习了一波。。 02. Caddy简介 caddy的文档还是蛮全的，不过有些细节需要你自己的发掘，摆好姿势和造型才能跑的更流畅。 官方文档：<a href="https://caddyserver.com/docs/getting-started" target="_blank">https://caddyserver.com/docs/getting-started</a> github文档：<a href="https://github.com/caddyserver/caddy/wiki" target="_blank">https://github.com/caddyserver/caddy/wiki</a> example：<a href="https://github.com/caddyserver/caddy/wi" target="_blank">https://github.com/caddyserver/caddy/wi</a>....</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/01/08/1578496435040.html</guid>
      <category>Caddy</category>
      <pubDate>Wed, 08 Jan 2020 10:13:58 -0500</pubDate>
    </item>
    <item>
      <title>从“跌倒”到再次“跌倒”之 tree 命令</title>
      <link>https://blog.mufengs.com/articles/2020/01/07/1578403636261.html</link>
      <description><![CDATA[<p>印象笔记中讲过一种文件整理方式，就想着整理下自己上G的“杂物堆”（图片文档之类的） 大致的目录结构如下  01xxx | 中文 02xxx | 中文 03xxx | 中文  我的就学习着改下目录，修改如下  整理完了，只会果然变得清爽很多，与此同时在命令行里面进入目录再也不用切换输入法打中文了。 接下来就是生成一个Readme文件，简单描述下每个目录的内容，脑海里第一个想到的就是用tree ，想到这就直接开搞  报错了,不对乱码了？慌得一批，什么鬼👻  未知的错误总是让人头疼，于是查找相关资料 大概的意思是tree显示目录中文时，需要加参数N 继续操作之后，终于得到了想要的样子  附上相关参数 * -a 显示所有文件和目录。 * -A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。 * -C 在文件和目录清单加上色彩，便于区分各种类型。 * -d 显示目录名称而非内容。 * -D 列出文件或目录的更改时间。 * -f 在每个文件或目录之前，显示完整的相对路径名称。 * -F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”/”,”=”,”@”,”|....</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/01/07/1578403636261.html</guid>
      <category>Shell</category>
      <pubDate>Tue, 07 Jan 2020 08:27:19 -0500</pubDate>
    </item>
    <item>
      <title>分享下电脑桌面 --2020</title>
      <link>https://blog.mufengs.com/articles/2020/01/03/1578103270403.html</link>
      <description><![CDATA[<p>‘Tony’老师亲自操刀的图，非常酷炫。当然原图不是这样的，因为我想用来做背景，就让他把各个颜色加深了 争取有生之年，周游全国球。 1.中国 🇨🇳 2.韩国 🇰🇷 3.格鲁吉亚 🇬🇪 征得作者同意之后，骗点积分，上原图</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/01/03/1578103270403.html</guid>
      <category>桌面</category>
      <pubDate>Sun, 05 Jan 2020 21:29:25 -0500</pubDate>
    </item>
    <item>
      <title>《Linux 系统安全》</title>
      <link>https://blog.mufengs.com/articles/2020/01/04/1578123170693.html</link>
      <description><![CDATA[<p>仅分享下目录，记录下这本书读完了。  随着Linux的日益普及，越来越多的管理员开始进入到系统中为任务创建网络连接或服务器，这也使得Linux成为许多攻击者的选择。由于缺乏有关安全相关技术，系统管理员面临许多安全问题。学习Linux安全知识将有助于创建一个更安全的Linux系统。本书循序渐进地介绍Linux系统面临的各种安全威胁，介绍如何通过定制Linux内核保护本地文件,如何在本地和远程管理用户身份验证，并阻止网络攻击等。本书实例丰富、图示清晰，无论你是新手还是经验丰富的Linux管理员，你都能从本书中学到Linux系统安全技术。 第1章　Linux的安全问题 1 　　1.1　引言 1 　　1.2　Linux的安全策略 1 　　1.3　配置口令保护 2 　　1.4　配置服务器安全 3 　　1.5　安全控制 4 　　1.6　使用校验和检测安装介质的完整性 4 　　1.7　使用LUKS加密磁盘 6 　　1.8　配置sudo访问 8 　　1.9　使用Nmap扫描主机 10 　　1.10　获取脆弱Linux系统的root权限 13 第2章　配置安全且优化的内核 18 　　2.1　引言 18 ....</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2020/01/04/1578123170693.html</guid>
      <category>阅读</category>
      <pubDate>Sat, 04 Jan 2020 02:35:50 -0500</pubDate>
    </item>
    <item>
      <title>格鲁吉亚 9 天 8 夜蜜月自由行 (完结)</title>
      <link>https://blog.mufengs.com/articles/2019/10/21/1571635492008.html</link>
      <description><![CDATA[<p>前期准备 相关资料 相关介绍，以及注意事项等见下文 <a href="https://hacpai.com/article/1571740286377" target="_blank">https://hacpai.com/article/1571740286377</a> 时间：2019 年 10 月 9 号--2019 年 10 月 18 号 地点：南京禄口✈️乌鲁木齐地窝堡✈️ Tbilisi 出行方式：自由行（机票是找旅行社买的，2 个人往返不到 1 万的样子） 人物：我和小仙女 旅游预算：15000-20000 左右 出行计划：  通信方式：我是用的移动的国际漫游和“一带一路”套餐，防止国内的电话，比较不划算 198元7天，不限流量 ，个人不是很推荐。 小仙女用的是Beetline，标示长得像便利蜂标示，大概40人民币的样子，10个G流量，购买这个电话卡是需要出示护照用于登记，然后店家会帮你注册帮你换卡，格鲁吉亚人还是很热心的。 我们在出国前临时换了1400人民币，也就180美元左右，这里需要注意的是兑换货币需要提前一到两天跟银行提出申请，否则当天兑换的话可能会拒绝办理。 10 月 1 日结婚，也算是今年计划的一件事做完了 附上帅气结婚照  Days1 南京  10月9日 17：05分的航班 由南京飞乌鲁木齐 （目....</p>]]></description>
      <author>mufengcoding</author>
      <guid>https://blog.mufengs.com/articles/2019/10/21/1571635492008.html</guid>
      <category>旅游</category>
      <category>格鲁吉亚</category>
      <pubDate>Fri, 03 Jan 2020 21:06:44 -0500</pubDate>
    </item>
  </channel>
</rss>
